// A network that requires multiple rounds on SMIV.

network {
  name = "cnn"
  // This is about 50KB of input.
  input_rows = 64
  input_cols = 64
  input_height = 3

  // SMIV works per kernel, so the first layer will not stress the memory
  // system. It only needs to keep the 3 unreduced input channels.
  layer conv0 {
    type = CONVOLUTION
    activation = RELU
    convolution_param {
      num_output = 32
      kernel_size = 3
      stride = 1
      padding = SAME
    }
  }

  // This one is designed to stress the memory system. Each kernel requires
  // 500KB of scratchpad space for the unreduced outputs.
  // In total, this produces 163KB of output.
  layer conv1 {
    type = CONVOLUTION
    activation = RELU
    convolution_param {
      num_output = 10
      kernel_size = 3
      stride = 1
      padding = SAME
    }
  }

  // Reduces the output to about 40KB.
  layer pool0 {
    type = POOLING
    pooling_param {
      pool = MAX
      size = 2
      stride = 2
    }
  }

  // Final layer to produce output.
  layer fc5 {
    type = INNER_PRODUCT
    inner_product_param {
      num_output = 10
    }
  }
}

device {
  use_hw_pooling = true
  use_hw_batch_norm = true
}
