DLEVEL ?= 0
CFLAGS?=-O3 -Wall -Wno-psabi \
        -Wno-unused-label -Wno-unused-but-set-variable \
        -Wno-maybe-uninitialized -DARCHITECTURE=SMV -DTRANSPOSE_WEIGHTS=1 \
        -DDEBUG_LEVEL=$(DLEVEL)
LFLAGS += -lm -lconfuse -lrt

SRC_DIR = cam_vision_pipe/src
CAM_PIPE_SRC_DIR = cam_vision_pipe/src/cam_pipe
NNET_LIB_SRC_DIR = cam_vision_pipe/src/nnet_lib
BUILD_DIR = build
CURRENT_DIR := $(dir $(abspath $(lastword $(MAKEFILE_LIST))))

COMMON_SRCS = common/main.c \
	      common/utility.c

#
# Source files for the frontend camera pipeline
#

CAM_PIPE_SRCS = cam_pipe.c \
	kernels/pipe_stages.c \
        utility/load_cam_model.c \
        utility/cam_pipe_utility.c

#
# Source files for the backend neural network library
#

NNET_LIB_CORE_SRCS = core/ref/activation_functions.c \
						core/ref/convolution.c \
						core/ref/matrix_multiply.c \
						core/ref/zeropad.c \
						core/ref/pooling.c \
						core/ref/batch_norm.c \
						core/ref/lookup_tables.c \
						core/smiv/smiv.c \
						core/smiv/convolution.c \
						core/smiv/convolution_simd.c \
						core/smiv/matrix_multiply.c \
						core/smiv/reduction.c \
						core/smiv/batch_norm.c \
						core/smiv/max_pooling_nhwc.c \
						core/smiv/average_pooling_nhwc.c \
						core/smiv/decompression.c \
						core/smv/activation_functions.c \
						core/smv/convolution.c \
						core/smv/convolution_simd.c \
						core/smv/matrix_multiply.c \
						core/smv/smv.c

NNET_LIB_UTILITY_SRCS = utility/init_data.c \
							 utility/utility.c \
							 utility/model_conf_params.c \
							 utility/read_model_conf.c \
							 utility/profiling.c \
							 utility/data_archive.c \
							 utility/data_archive_txt.c \
							 utility/data_archive_common.c \
							 utility/data_archive_bin.c \
							 utility/data_layout_conversion.c \
							 utility/compression.c \
							 utility/thread_pool.c

NNET_LIB_ARCH_SRCS = arch/common.c

SMIV_ARCH_SRCS = arch/smiv/activation_functions.c \
       						 arch/smiv/batch_norm.c \
       						 arch/smiv/inner_product.c \
       					 	 arch/smiv/convolution.c \
       						 arch/smiv/decompression.c \
       						 arch/smiv/dispatch_utils.c \
       						 arch/smiv/pooling.c \
       						 arch/smiv/utils.c

SMV_ARCH_SRCS = arch/smv/activation_functions.c \
						    arch/smv/batch_norm.c \
								arch/smv/convolution.c \
								arch/smv/convolution_wt.c \
								arch/smv/dma_copy.c \
								arch/smv/inner_product.c \
								arch/smv/pooling.c \
								arch/smv.c

NNET_LIB_SRCS = $(NNET_LIB_CORE_SRCS) $(NNET_LIB_UTILITY_SRCS) $(NNET_LIB_ARCH_SRCS)

export WORKLOAD=smv_inner_product_layer_hw,smv_eltwise_hw,smv_convolution_layer_hw,activation_fun_fxp,smv_batch_norm_layer_hw,smv_pooling_layer_hw,smiv_decompress_packed_csr_hw,smv_dma_load_hw,smv_dma_store_hw,load_cam_params_hw,isp_hw
NNET_LIB_SRCS += $(SMV_ARCH_SRCS) $(SMIV_ARCH_SRCS)

SRCS = $(COMMON_SRCS) $(CAM_PIPE_SRCS) $(NNET_LIB_SRCS)
GEM5_DMA_SRC = gem5/dma_interface.c
GEM5_SYS_SRCS = gem5/aladdin_sys_connection.cpp gem5/aladdin_sys_constants.cpp
GEM5_UTIL_SRCS = ../../util/m5/m5op_x86.S

# NATIVE_FULL_PATH_SRCS contains all the full path source files for the camera vision pipeline.
NATIVE_FULL_PATH_SRCS = $(patsubst %, $(SRC_DIR)/%, $(COMMON_SRCS))
NATIVE_FULL_PATH_SRCS += $(patsubst %, $(CAM_PIPE_SRC_DIR)/%, $(CAM_PIPE_SRCS))
NATIVE_FULL_PATH_SRCS += $(patsubst %, $(NNET_LIB_SRC_DIR)/%, $(NNET_LIB_SRCS))

# GEM5_FULL_PATH_SRCS contains all the full path source files for the gem5 files.
GEM5_FULL_PATH_SRCS = $(patsubst %, $(ALADDIN_HOME)/%, $(GEM5_DMA_SRC) $(GEM5_SYS_SRCS) $(GEM5_UTIL_SRCS))

INCLUDES += -I$(ALADDIN_HOME) \
	    -I$(ALADDIN_HOME)/../../include \
	    -I$(ALADDIN_HOME)/gem5 \
            -I$(SRC_DIR) \
            -I$(CAM_PIPE_SRC_DIR) \
            -I$(NNET_LIB_SRC_DIR) \
            -I$(NNET_LIB_SRC_DIR)/third_party/FP16/include

ifneq ($(CONFUSE_ROOT),)
INCLUDES += -I$(CONFUSE_ROOT)/include
LFLAGS += -L$(CONFUSE_ROOT)/lib
endif

EXE = cam-vision
