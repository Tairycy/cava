network {
  name = "elu-network"
  input_rows = 32
  input_cols = 32
  input_height = 3

  layer conv0_stack0 {
    type = CONVOLUTION
    activation = ELU
    convolution_param {
      num_output = 192
      kernel_size = 5
      stride = 1
      padding = SAME
    }
  }

  layer pool_stack0 {
    type = POOLING
    pooling_param {
      pool = MAX
      size = 2
      stride = 2
    }
  }

  layer conv0_stack1 {
    type = CONVOLUTION
    activation = ELU
    convolution_param {
      num_output = 192
      kernel_size = 1
      stride = 1
      padding = SAME
    }
  }

  layer conv1_stack1 {
    type = CONVOLUTION
    activation = ELU
    convolution_param {
      num_output = 240
      kernel_size = 3
      stride = 1
      padding = SAME
    }
  }

  layer pool_stack1 {
    type = POOLING
    pooling_param {
      pool = MAX
      size = 2
      stride = 2
    }
  }

  layer conv0_stack2 {
    type = CONVOLUTION
    activation = ELU
    convolution_param {
      num_output = 240
      kernel_size = 1
      stride = 1
      padding = SAME
    }
  }

  layer conv1_stack2 {
    type = CONVOLUTION
    activation = ELU
    convolution_param {
      num_output = 260
      kernel_size = 2
      stride = 1
      padding = SAME
    }
  }

  layer pool_stack2 {
    type = POOLING
    pooling_param {
      pool = MAX
      size = 2
      stride = 2
    }
  }

  layer conv0_stack3 {
    type = CONVOLUTION
    activation = ELU
    convolution_param {
      num_output = 260
      kernel_size = 1
      stride = 1
      padding = SAME
    }
  }

  layer conv1_stack3 {
    type = CONVOLUTION
    activation = ELU
    convolution_param {
      num_output = 280
      kernel_size = 2
      stride = 1
      padding = SAME
    }
  }

  layer pool_stack3 {
    type = POOLING
    pooling_param {
      pool = MAX
      size = 2
      stride = 2
    }
  }

  layer conv0_stack4 {
    type = CONVOLUTION
    activation = ELU
    convolution_param {
      num_output = 280
      kernel_size = 1
      stride = 1
      padding = SAME
    }
  }

  layer conv1_stack4 {
    type = CONVOLUTION
    activation = ELU
    convolution_param {
      num_output = 300
      kernel_size = 2
      stride = 1
      padding = SAME
    }
  }

  layer pool_stack4 {
    type = POOLING
    pooling_param {
      pool = MAX
      size = 2
      stride = 2
    }
  }

  layer conv0_stack5 {
    type = CONVOLUTION
    activation = ELU
    convolution_param {
      num_output = 300
      kernel_size = 1
      stride = 1
      padding = SAME
    }
  }

  layer conv0_stack6 {
    type = CONVOLUTION
    activation = ELU
    convolution_param {
      num_output = 100
      kernel_size = 1
      stride = 1
      padding = SAME
    }
  }
}

device {
  cpu_default_offload = DMA
  cpu_activation_func_offload = DMA
  use_hw_activation_func = true
  use_hw_pooling = true
  use_hw_batch_norm = true
  use_pipelined_dma = true
  weights_load_policy = DMA_ALWAYS
}

sampling_param {
  smv_conv_inner_iters = 1
  smv_conv_output_tiles = 1
}
